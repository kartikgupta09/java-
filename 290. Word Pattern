class Solution {
    public boolean wordPattern(String pattern, String s) {
        /*String[] arr = s.split(" ");
        if(pattern.length() != arr.length){
            return false;
        }
        HashMap<String,Integer> map1 = new HashMap();
        HashMap<Character,Integer> map2 = new HashMap();
        for(Integer i=0;i<arr.length;i++){
            if(map1.put(arr[i],i) != map2.put(pattern.charAt(i),i)){
                return false;
            }
        }
        return true;*/
        String[] arr = s.split(" ");
        if(pattern.length() != arr.length){
            return false;
        }
        HashMap<Character,String> map1 = new HashMap<>();
        HashMap<String,Character> map2 = new HashMap<>();
        for(int i=0;i<pattern.length();i++){
            char ch = pattern.charAt(i);
            String word = arr[i];
            if(!map1.containsKey(ch)){
                map1.put(ch,word);
            }if(!map2.containsKey(word)){
                map2.put(word,ch);
            }if(!map1.get(ch).equals(word)||!map2.get(word).equals(ch)){
                return false;
            }
        }
        return true;
    }
}
