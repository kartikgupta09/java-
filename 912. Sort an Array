//doing the same merge sort technique...
class Solution {
    public int[] sortArray(int[] arr) {
        if(arr.length == 1){
            return arr;
        }
        int len = arr.length;
         int mid = len/2;
        int[] left = sortArray(Arrays.copyOfRange(arr,0,mid));
        int[] right = sortArray(Arrays.copyOfRange(arr,mid,len));
        return merge(left,right);
    }
    static int[] merge(int[] first, int[] second){
        int i =0;
        int j = 0;
        int k = 0;
        int[] mix = new int[first.length+second.length];
        while(i<first.length && j<second.length){
            if(first[i] < second[j]){
                mix[k] = first[i];
                i++;
            }else{
                mix[k] = second[j];
                j++;
            }
            k++;
        }
        while(i<first.length){
            mix[k] = first[i];
            i++;
            k++;
        }while(j<second.length){
            mix[k] = second[j];
            j++;
            k++;
        }
        return mix;
    }
}
