/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private void inorder(TreeNode root, List<Integer> num){
        if(root == null){
            return;
        }
        inorder(root.left, num);
        num.add(root.val);
        inorder(root.right,num);
    }
    public int minDiffInBST(TreeNode root) {
       List<Integer> num = new ArrayList<>();
        inorder(root,num);
        int min = Integer.MAX_VALUE;
        for(int i =0;i<num.size()-1;i++){
            int m = Math.abs(num.get(i)-num.get(i+1));
            if(m<min){
                min = m;
            }
        }
        return min;
    }
}
