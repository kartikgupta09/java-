class Solution {
    public int kthSmallest(int[][] matrix, int k){
    // Approach one..
        /*int n = matrix.length;
        int[] nums = new int[n*n];
        int idx = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                nums[idx++] = matrix[i][j];
            }
           
        }
        Arrays.sort(nums);
        return nums[k-1];*/
     // Approach two..
     
     
        int n = matrix.length;
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        for(int i=0;i<n;i++){
            for (int j=0;j<n;j++){
                if(pq.size() < k){
                    pq.add(matrix[i][j]);
                }
                else{
                    if(pq.peek() > matrix[i][j]){
                        pq.poll();
                        pq.add(matrix[i][j]);
                    }
                }
            }
        }
        return pq.poll();
    }
}
